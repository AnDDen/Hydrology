<Application x:Class="HydrologyDesktop.App"
             xmlns:Controls="clr-namespace:HydrologyDesktop.Controls"  
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Path x:Key="IconTriangle" x:Shared="False" Stretch="Uniform" Data="M50,130 L50,150 65,140 z" Fill="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
        <Style x:Key="NodeStyle">
            <Setter Property="Controls:NodeControl.Width" Value="150"></Setter>
        </Style>
        <Style x:Key="CanvasStyle" TargetType="{x:Type Canvas}">
            <Setter Property="Background">
                <Setter.Value>
                    <VisualBrush TileMode="Tile"
                        Viewport="0,0,15,15" ViewportUnits="Absolute" 
                        Viewbox="0,0,25,25" ViewboxUnits="Absolute">
                        <VisualBrush.Visual>
                            <Canvas>
                                <Rectangle StrokeDashArray="2 10" Fill="White" Height="25" Width="25"/>
                                <Line Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" X1="0" Y1="0" X2="25" Y2="0" StrokeThickness="2"></Line>
                                <Line Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" X1="0" Y1="0" X2="0" Y2="25" StrokeThickness="2"></Line>
                            </Canvas>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border Name="Border" Margin="-2, -2, 0, 0" Background="Transparent" BorderBrush="Black">
                                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center"
                                    ContentSource="Header" Margin="12,3,12,3" RecognizesAccessKey="True" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#FFA7A7A7" />
                                <Setter Property="Foreground" Value="DarkGray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToolButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="AlgButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Button.Margin" Value="0"></Setter>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
            <Setter Property="Foreground" Value="#FF000000" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="12 7"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                </Trigger>
                <Trigger Property="Tag" Value="Selected">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="NodeButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#00000000" />
            <Setter Property="Foreground" Value="#FF646464" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#FF333333" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="BackButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#00000000" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="ExpanderButtonTemplate" 
             TargetType="{x:Type ToggleButton}">
            <Border x:Name="ExpanderButtonBorder"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}" >
                <Grid x:Name="g" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Rectangle Fill="Transparent" Grid.ColumnSpan="2"/>
                    <Label x:Name="Sign" Grid.Column="0" FontFamily="Segoe UI Symbol" Content="&#xe08b;" Padding="10 5" 
                           FontSize="14" BorderThickness="0" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
                    <ContentPresenter x:Name="HeaderContent" VerticalAlignment="Center" Margin="8 0 0 0"
                                      Grid.Column="1" ContentSource="Content"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content" TargetName="Sign" Value="&#xe08a;"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ExpanderTemplate" TargetType="{x:Type Expander}">
            <DockPanel>
                <ToggleButton x:Name="ExpanderButton" DockPanel.Dock="Top" Template="{StaticResource ExpanderButtonTemplate}"
                      Content="{TemplateBinding Header}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                      OverridesDefaultStyle="True"/>
                <ContentPresenter x:Name="ExpanderContent" DockPanel.Dock="Bottom" Margin="0"/>
            </DockPanel>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="True">
                    <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsExpanded" Value="False">
                    <Setter TargetName="ExpanderContent" Property="Visibility" Value="Collapsed"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Application.Resources>
</Application>
